这个包的内容是演示如何使用Java的动态编译功能，为后面的动态代理做铺垫。

主要看Test1.java

演示如何把字符串生成为一个java文件，并且对其进行编译，生成实例，调用方法。
在例子中也就是动态生成TankTimeProxy类的实例

但是，此时的Test1只能生成Moveable接口的代理类，如果要代理其他类呢？
那么就要在调用生成代理的方法时，把接口传进去，例如传入Moveable.class，根据传入的类来生成代码。

问题又来了，现在Test1中重写的move方法，是写死的。如果传入的不是Moveable接口，就不适用了，这时候怎么办呢？   
这时候，就要用到Java的反射机制了。见Test2.java。通过反射机制，获取某个类里的方法。

再进一步，可以专门设计一个Handler，把代理的任务交给Handler。生成代理的类的时候，除了传入接口，也把这个Handler传进去。
这样的话，就可以根据需要，随意更换Handler，改改任务类型。

具体看proxy.dynamicProxy包